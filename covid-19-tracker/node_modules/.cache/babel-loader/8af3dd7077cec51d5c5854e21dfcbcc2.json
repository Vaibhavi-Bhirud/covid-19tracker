{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1E-drive\\\\LANGUAGES\\\\JS\\\\Covide__19\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nconst options = {\n  legends: {\n    display: false\n  },\n  elements: {\n    point: {\n      radios: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: indexedDB,\n    intersect: false,\n    callback: {\n      lable: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({}); // https://disease.sh/v3/covid-19/Historical/all?Lastsays=120\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for (let data in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data, \"cases\");\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16,52,0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph; //  last viwe on i2.58.22\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["D:/1E-drive/LANGUAGES/JS/Covide__19/covid-19-tracker/src/LineGraph.js"],"names":["React","useEffect","useState","Line","options","legends","display","elements","point","radios","maintainAspectRatio","tooltips","mode","indexedDB","intersect","callback","lable","tooltipItem","data","numeral","value","format","LineGraph","setData","buildChartData","casesType","chartData","lastDataPoint","cases","newDataPoint","x","date","y","push","fetch","then","response","json","console","log","datasets","backgroundColor","borderColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GADK;AAIdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AADC,GAJI;AASdC,EAAAA,mBAAmB,EAAE,KATP;AAUdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,SADE;AAERC,IAAAA,SAAS,EAAE,KAFH;AAGRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,UAAUC,WAAV,EAAuBC,IAAvB,EAA6B;AAClC,eAAOC,OAAO,CAACF,WAAW,CAACG,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;AACD;AAHO;AAHF;AAVI,CAAhB;;AAqBA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC,CADmB,CAGnB;;AAEA,QAAMsB,cAAc,GAAG,CAACN,IAAD,EAAOO,SAAS,GAAG,OAAnB,KAA+B;AACpD,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,aAAJ;;AACA,SAAK,IAAIT,IAAT,IAAiBA,IAAI,CAACU,KAAtB,EAA6B;AAC3B,UAAID,aAAJ,EAAmB;AACjB,cAAME,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEC,IADgB;AAEnBC,UAAAA,CAAC,EAAEd,IAAI,CAACO,SAAD,CAAJ,CAAgBM,IAAhB,IAAwBJ;AAFR,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeJ,YAAf;AACD;;AACDF,MAAAA,aAAa,GAAGT,IAAI,CAACO,SAAD,CAAJ,CAAgBM,IAAhB,CAAhB;AACD;;AACD,WAAOL,SAAP;AACD,GAdD;;AAgBAzB,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESjB,IAAD,IAAU;AACdoB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACA,YAAMQ,SAAS,GAAGF,cAAc,CAACN,IAAD,EAAO,OAAP,CAAhC;AACAK,MAAAA,OAAO,CAACG,SAAD,CAAP;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,OAAO,EAAEtB,OADX;AAEE,MAAA,IAAI,EAAE;AACJoC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,eAAe,EAAE,qBADnB;AAEEC,UAAAA,WAAW,EAAE,SAFf;AAGExB,UAAAA,IAAI,EAAEA;AAHR,SADQ;AADN;AAFR;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhDQI,S;;KAAAA,S;AAkDT,eAAeA,SAAf,C,CACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst options = {\r\n  legends: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radios: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: indexedDB,\r\n    intersect: false,\r\n    callback: {\r\n      lable: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nfunction LineGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  // https://disease.sh/v3/covid-19/Historical/all?Lastsays=120\r\n\r\n  const buildChartData = (data, casesType = \"cases\") => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    for (let data in data.cases) {\r\n      if (lastDataPoint) {\r\n        const newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        const chartData = buildChartData(data, \"cases\");\r\n        setData(chartData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>I am a graph</h1>\r\n      <Line\r\n        options={options}\r\n        data={{\r\n          datasets: [\r\n            {\r\n              backgroundColor: \"rgba(204,16,52,0.5)\",\r\n              borderColor: \"#CC1034\",\r\n              data: data,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n//  last viwe on i2.58.22"]},"metadata":{},"sourceType":"module"}