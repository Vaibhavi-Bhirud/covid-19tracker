{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\1E-drive\\\\LANGUAGES\\\\JS\\\\Covide__19\\\\covid-19-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport \"./App.css\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\n\nfunction App() {\n  _s();\n\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3); //  https://disease.sh/v3/covid-19/countries\n  //  based on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    // The hear will run once\n    // when the components loades and not again\n    // async -> send a request, wate for it, do somthing with info\n    const getContriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          //United State.\n          value: country.countryInfo.iso2 //UK, IND\n\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getContriesData();\n  }, []);\n\n  const onCountryChange = event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    const a = fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); //  All the data....\n      // from the contry responce\n\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__status\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        center: center,\n        zoom: zoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      countries: tableData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Worldwise new cases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__information\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Live Cases by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Worldwide new \", casesType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            casesType: casesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sV9MZmZ2v8izFQm5OcFA8EuzDbI=\");\n\n_c = App;\nexport default App; // Last seen 20:09:20\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/1E-drive/LANGUAGES/JS/Covide__19/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","LineGraph","App","country","setInputCountry","countryInfo","setCountryInfo","countries","setCountries","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","fetch","then","response","json","data","getContriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","setCountry","url","a","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths","center","zoom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport \"./App.css\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\n\nfunction App() {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  //  https://disease.sh/v3/covid-19/countries\n  //  based on a given condition\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    // The hear will run once\n    // when the components loades and not again\n    // async -> send a request, wate for it, do somthing with info\n    const getContriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country, //United State.\n            value: country.countryInfo.iso2, //UK, IND\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n        });\n    };\n    getContriesData();\n  }, []);\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    const a = fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        //  All the data....\n        // from the contry responce\n        setCountryInfo(data);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              {/** Loop through all the countries and show a drop down list of the option */}\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__status\">\n          <InfoBox\n            title=\"Coronavirus Cases\"\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n          />\n          <InfoBox\n            title=\"Recovered\"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n          <InfoBox\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n          {/* InfoBoxes title=\"Corona virus cases\"  */}\n          {/* InfoBoxes title=\"Coronavirus recoveries\" */}\n          {/* InfoBoxes */}\n        </div>\n\n        {/* Map */}\n        <Map center={center} zoom={zoom} />\n      </div>\n      {/* <Card className=\" app__right\">\n        <CardContent>\n          <h3>Live Cases by country </h3> */}\n          {/* Table */}\n          <Table countries={tableData} />\n          <h3>Worldwise new cases</h3>\n\n          {/* Graph */}\n          {/* <LineGraph /> */}\n          <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n// Last seen 20:09:20\n"]},"metadata":{},"sourceType":"module"}