{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\1E-drive\\\\5TH sem STUDY\\\\CAPSTON PROJECT\\\\covid-19-tracker\\\\src\\\\util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColors = {\n  cases: {\n    multiplier: 800,\n    option: {\n      color: \"#cc1034\",\n      fillColor: \"#cc1034\"\n    }\n  },\n  recovered: {\n    multiplier: 1200,\n    option: {\n      color: \"#7dd71d\",\n      fillColor: \"#7dd71d\"\n    }\n  },\n  deaths: {\n    multiplier: 2000,\n    option: {\n      color: \"#ff6c47\",\n      fillColor: \"#ff6c47\"\n    }\n  }\n};\nexport const sortData = data => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  pathOptions: casesTypeColors[casesType].option,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: [\">\", /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-name\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-confirmed\",\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0a\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["D:/1E-drive/5TH sem STUDY/CAPSTON PROJECT/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","multiplier","option","color","fillColor","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    multiplier: 800,\r\n    option: { color: \"#cc1034\", fillColor: \"#cc1034\" },\r\n  },\r\n  recovered: {\r\n    multiplier: 1200,\r\n    option: { color: \"#7dd71d\", fillColor: \"#7dd71d\" },\r\n  },\r\n  deaths: {\r\n    multiplier: 2000,\r\n    option: { color: \"#ff6c47\", fillColor: \"#ff6c47\" },\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      pathOptions={casesTypeColors[casesType].option}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0a\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n"]},"metadata":{},"sourceType":"module"}